defmodule Jumble.ScowlDict.Size10.Length11 do
  def get(string_id) do
    %{"eegiinnrstt" => ["interesting"], "aceeilnrssy" => ["necessarily"],
      "abciimnnoot" => ["combination"], "biiilopssty" => ["possibility"],
      "abdeehilsst" => ["established"], "aailnnorstt" => ["translation"],
      "eeggiinrrst" => ["registering"], "egginossstu" => ["suggestions"],
      "aaccillprty" => ["practically"], "ceiimnooptt" => ["competition"],
      "cdeeeffinrs" => ["differences"], "aabdeemrrss" => ["embarrassed"],
      "acceilmopst" => ["complicates"], "aacdeeipprt" => ["appreciated"],
      "eeeimnqrrtu" => ["requirement"], "abeehilssst" => ["establishes"],
      "addennrsstu" => ["understands"], "cdegiinnors" => ["considering"],
      "cdeeeeinprx" => ["experienced"], "inoopprttuy" => ["opportunity"],
      "acgiilmnnop" => ["complaining"], "deeelmnoptv" => ["development"],
      "cdegimnnotu" => ["documenting"], "aefnnorttuu" => ["unfortunate"],
      "aciiilmnopt" => ["implication"], "aehiiorsttu" => ["authorities"],
      "abciilnoptu" => ["publication"], "aacehimmstt" => ["mathematics"],
      "aadeflmnntu" => ["fundamental"], "dghiiinsstu" => ["distinguish"],
      "deeeilmmnpt" => ["implemented"], "abeinoorstv" => ["observation"],
      "aagilnnrstt" => ["translating"], "egilmnoorty" => ["terminology"],
      "adegiinrstv" => ["advertising"], "cddeeemmnor" => ["recommended"],
      "acddegiorsu" => ["discouraged"], "acdegiorssu" => ["discourages"],
      "afiimnnoort" => ["information"], "aaceeipprst" => ["appreciates"],
      "acillnnotuy" => ["continually"], "acciilnortu" => ["circulation"],
      "cimnnoopstu" => ["consumption"], "cdegiinorsv" => ["discovering"],
      "aeillnoptty" => ["potentially"], "aaeioppprrt" => ["appropriate"],
      "ceeeffiltvy" => ["effectively"], "aegilnorstu" => ["regulations"],
      "beeegimmnrr" => ["remembering"], "iiinnostttu" => ["institution"],
      "ddeeeinnnpt" => ["independent"], "aceehilortt" => ["theoretical"],
      "aceeelmnprt" => ["replacement"], "defiiinnost" => ["definitions"],
      "aeflnorttuy" => ["fortunately"], "cdiiinnostt" => ["distinction"],
      "deeffilnrty" => ["differently"], "cceinnossty" => ["consistency"],
      "accdgilnory" => ["accordingly"], "aceennrssuy" => ["unnecessary"],
      "aeegiinsttv" => ["investigate"], "acinnorsstt" => ["constraints"],
      "aagiiimnnot" => ["imagination"], "aaciilnoppt" => ["application"],
      "acfgiiinnst" => ["significant"], "addiiilnsuv" => ["individuals"],
      "ceinnnoostv" => ["conventions"], "cceinnnoost" => ["connections"],
      "eeimmnoprtv" => ["improvement"], "acceimmnotu" => ["communicate"],
      "aaciilssttt" => ["statistical"], "aeeillnssty" => ["essentially"],
      "eeeggiinnnr" => ["engineering"], "cdeiinoprst" => ["description"],
      "cegiinnoort" => ["recognition"], "aceefmnoprr" => ["performance"],
      "cegiinrrstt" => ["restricting"], "aacgiinosst" => ["associating"],
      "aaeegmnnrrt" => ["arrangement"], "aaccillnotu" => ["calculation"],
      "aaciinoosst" => ["association"], "aeeemprrttu" => ["temperature"],
      "cdiinossssu" => ["discussions"], "adeefnrrrst" => ["transferred"],
      "cgillnnoort" => ["controlling"], "aeilmoprrty" => ["temporarily"],
      "aacdeilnotu" => ["educational"], "aabeemrrsss" => ["embarrasses"],
      "aaddeeipprs" => ["disappeared"], "eegiillnntt" => ["intelligent"],
      "bddeiirsttu" => ["distributed"], "eeimnnnortv" => ["environment"],
      "cceeennoqsu" => ["consequence"], "beeilnoprss" => ["responsible"],
      "eeeimnprstx" => ["experiments"], "cfghimnoort" => ["forthcoming"],
      "aggimmnoprr" => ["programming"], "deeeinprrtt" => ["interpreted"],
      "aeegilmnnss" => ["meaningless"], "ailmnoprtty" => ["importantly"],
      "adeeiilmmty" => ["immediately"], "aabilnssttu" => ["substantial"],
      "aeelmnnprty" => ["permanently"], "ciimnooopst" => ["composition"],
      "cdgiinnortu" => ["introducing"], "cceeilnorst" => ["electronics"],
      "deeeenprrst" => ["represented"], "aaeinopprrt" => ["preparation"],
      "aaeeilnrttv" => ["alternative"], "aagiiimnnnt" => ["maintaining"],
      "aaeilnnoptx" => ["explanation"], "accdeilmopt" => ["complicated"],
      "bdeiirssttu" => ["distributes"], "cdeeennortu" => ["encountered"],
      "deegiimnnrt" => ["determining"], "acegginnoru" => ["encouraging"],
      "aadiilnortt" => ["traditional"], "adeemnorstt" => ["demonstrate"],
      "ciinnorsttu" => ["instruction"], "acinnopttuu" => ["punctuation"],
      "ceeeeinprsx" => ["experiences"], "aegmmoprrrs" => ["programmers"]}
    |> Map.get(string_id)
  end

  def valid_ids do
    ["eegiinnrstt", "aceeilnrssy", "abciimnnoot", "biiilopssty", "abdeehilsst",
     "aailnnorstt", "eeggiinrrst", "egginossstu", "aaccillprty", "ceiimnooptt",
     "cdeeeffinrs", "aabdeemrrss", "acceilmopst", "aacdeeipprt", "eeeimnqrrtu",
     "abeehilssst", "addennrsstu", "cdegiinnors", "cdeeeeinprx", "inoopprttuy",
     "acgiilmnnop", "deeelmnoptv", "cdegimnnotu", "aefnnorttuu", "aciiilmnopt",
     "aehiiorsttu", "abciilnoptu", "aacehimmstt", "aadeflmnntu", "dghiiinsstu",
     "deeeilmmnpt", "abeinoorstv", "aagilnnrstt", "egilmnoorty", "adegiinrstv",
     "cddeeemmnor", "acddegiorsu", "acdegiorssu", "afiimnnoort", "aaceeipprst",
     "acillnnotuy", "acciilnortu", "cimnnoopstu", "cdegiinorsv", "aeillnoptty",
     "aaeioppprrt", "ceeeffiltvy", "aegilnorstu", "beeegimmnrr", "iiinnostttu",
     "ddeeeinnnpt", "aceehilortt", "aceeelmnprt", "defiiinnost", "aeflnorttuy",
     "cdiiinnostt", "deeffilnrty", "cceinnossty", "accdgilnory", "aceennrssuy",
     "aeegiinsttv", "acinnorsstt", "aagiiimnnot", "aaciilnoppt", "acfgiiinnst",
     "addiiilnsuv", "ceinnnoostv", "cceinnnoost", "eeimmnoprtv", "acceimmnotu",
     "aaciilssttt", "aeeillnssty", "eeeggiinnnr", "cdeiinoprst", "cegiinnoort",
     "aceefmnoprr", "cegiinrrstt", "aacgiinosst", "aaeegmnnrrt", "aaccillnotu",
     "aaciinoosst", "aeeemprrttu", "cdiinossssu", "adeefnrrrst", "cgillnnoort",
     "aeilmoprrty", "aacdeilnotu", "aabeemrrsss", "aaddeeipprs", "eegiillnntt",
     "bddeiirsttu", "eeimnnnortv", "cceeennoqsu", "beeilnoprss", "eeeimnprstx",
     "cfghimnoort", "aggimmnoprr", "deeeinprrtt", "aeegilmnnss", "ailmnoprtty",
     "adeeiilmmty", "aabilnssttu", "aeelmnnprty", "ciimnooopst", "cdgiinnortu",
     "cceeilnorst", "deeeenprrst", "aaeinopprrt", "aaeeilnrttv", "aagiiimnnnt",
     "aaeilnnoptx", "accdeilmopt", "bdeiirssttu", "cdeeennortu", "deegiimnnrt",
     "acegginnoru", "aadiilnortt", "adeemnorstt", "ciinnorsttu", "acinnopttuu",
     "ceeeeinprsx", "aegmmoprrrs"]
    |> Enum.into(HashSet.new)
  end
end
