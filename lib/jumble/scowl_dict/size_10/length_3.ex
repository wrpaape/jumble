defmodule Jumble.ScowlDict.Size10.Length3 do
  def get(string_id) do
    %{"hot" => ["hot"], "ctu" => ["cut"], "afr" => ["far"], "abd" => ["bad"],
      "bgi" => ["big"], "imx" => ["mix"], "nru" => ["run"], "bde" => ["bed"],
      "lot" => ["lot"], "eil" => ["lie"], "deu" => ["due"], "fnu" => ["fun"],
      "afn" => ["fan"], "eit" => ["tie"], "ehr" => ["her"],
      "now" => ["now", "own", "won"], "amy" => ["may"], "atx" => ["tax"],
      "aly" => ["lay"], "ddo" => ["odd"], "opp" => ["pop"], "est" => ["set"],
      "aet" => ["ate", "eat", "tea"], "orw" => ["row"], "ill" => ["ill"],
      "dei" => ["die"], "den" => ["end"], "aim" => ["aim"], "ilo" => ["oil"],
      "emn" => ["men"], "nsu" => ["sun"], "rty" => ["try"], "oru" => ["our"],
      "enp" => ["pen"], "alw" => ["law"], "cei" => ["ice"], "ent" => ["net", "ten"],
      "eey" => ["eye"], "add" => ["add"], "ady" => ["day"], "def" => ["fed"],
      "bet" => ["bet"], "ads" => ["sad"], "eht" => ["the"], "esu" => ["use"],
      "ast" => ["sat"], "guy" => ["guy"], "anr" => ["ran"], "dir" => ["rid"],
      "anv" => ["van"], "del" => ["led"], "aer" => ["are"], "bjo" => ["job"],
      "ffo" => ["off"], "dry" => ["dry"], "boy" => ["boy"], "act" => ["act", "cat"],
      "deo" => ["doe"], "eno" => ["one"], "amp" => ["map"], "eow" => ["owe"],
      "dmo" => ["mod"], "enw" => ["new"], "aht" => ["hat"], "ist" => ["its", "sit"],
      "ahs" => ["has"], "ehs" => ["hes", "she"], "acr" => ["car"], "adh" => ["had"],
      "esy" => ["yes"], "bit" => ["bit"], "apy" => ["pay"], "abr" => ["bar"],
      "dlo" => ["old"], "all" => ["all"], "eky" => ["key"], "fix" => ["fix"],
      "buy" => ["buy"], "got" => ["got"], "aeg" => ["age"], "ees" => ["see"],
      "adi" => ["aid"], "his" => ["his"], "fly" => ["fly"], "int" => ["tin"],
      "air" => ["air"], "not" => ["not"], "any" => ["any"], "fry" => ["fry"],
      "aks" => ["ask"], "dhi" => ["hid"], "art" => ["art"], "asy" => ["say"],
      "ptu" => ["put"], "emt" => ["met"], "adn" => ["and"], "joy" => ["joy"],
      "low" => ["low"], "isx" => ["six"], "elt" => ["let"], "hwy" => ["why"],
      "ddi" => ["did"], "opt" => ["top"], "hit" => ["hit"], "bdi" => ["bid"],
      "efw" => ["few"], "otu" => ["out"], "egl" => ["leg"], "asw" => ["saw", "was"],
      "ouy" => ["you"], "how" => ["how", "who"], "ags" => ["gas"], "egt" => ["get"],
      "amr" => ["arm"], "dgo" => ["dog"], "nos" => ["son"], "der" => ["red"],
      "oot" => ["too"], "fit" => ["fit"], "abn" => ["ban"], "amn" => ["man"],
      "cry" => ["cry"], "arw" => ["raw", "war"], "esx" => ["sex"], "box" => ["box"],
      "agp" => ["gap"], "cpu" => ["cup"], "ago" => ["ago"], "adm" => ["mad"],
      "acn" => ["can"], "msu" => ["sum"], "epr" => ["per"], "awy" => ["way"],
      "btu" => ["but"], "ety" => ["yet"], "glo" => ["log"], "dik" => ["kid"],
      "gnu" => ["gun"], "bgu" => ["bug"], "nor" => ["nor"], "otw" => ["two"],
      "inw" => ["win"], "for" => ["for"], "bsu" => ["bus"], "him" => ["him"],
      "aiv" => ["via"], "err" => ["err"]}
    |> Map.get(string_id)
  end

  def valid_ids do
    ["hot", "ctu", "afr", "abd", "bgi", "imx", "nru", "bde", "lot", "eil", "deu",
     "fnu", "afn", "eit", "ehr", "now", "amy", "atx", "aly", "ddo", "opp", "est",
     "aet", "orw", "ill", "dei", "den", "aim", "ilo", "emn", "nsu", "rty", "oru",
     "enp", "alw", "cei", "ent", "eey", "add", "ady", "def", "bet", "ads", "eht",
     "esu", "ast", "guy", "anr", "dir", "anv", "del", "aer", "bjo", "ffo", "dry",
     "boy", "act", "deo", "eno", "amp", "eow", "dmo", "enw", "aht", "ist", "ahs",
     "ehs", "acr", "adh", "esy", "bit", "apy", "abr", "dlo", "all", "eky", "fix",
     "buy", "got", "aeg", "ees", "adi", "his", "fly", "int", "air", "not", "any",
     "fry", "aks", "dhi", "art", "asy", "ptu", "emt", "adn", "joy", "low", "isx",
     "elt", "hwy", "ddi", "opt", "hit", "bdi", "efw", "otu", "egl", "asw", "ouy",
     "how", "ags", "egt", "amr", "dgo", "nos", "der", "oot", "fit", "abn", "amn",
     "cry", "arw", "esx", "box", "agp", "cpu", "ago", "adm", "acn", "msu", "epr",
     "awy", "btu", "ety", "glo", "dik", "gnu", "bgu", "nor", "otw", "inw", "for",
     "bsu", "him", "aiv", "err"]
    |> Enum.into(HashSet.new)
  end
end
