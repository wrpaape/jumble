defmodule Jumble.ScowlDict.Size50.Length17 do
  def get(string_id) do
    %{"addegiimnnnrssstu" => ["misunderstandings"],
      "abceiiiiilmnopstt" => ["incompatibilities"],
      "accdiiinnnoorsttt" => ["contradistinction"],
      "acceeiilmmnnoottu" => ["telecommunication"],
      "aeeeiinnoprrrsttt" => ["reinterpretations"],
      "aeeiiimnnoprrsttt" => ["misinterpretation"],
      "aaeehiinorsstttuv" => ["authoritativeness"],
      "aaccgiiimnnorstuv" => ["circumnavigations"],
      "aeefiilmnooprssss" => ["semiprofessionals"],
      "cceiinnnoopssssuu" => ["inconspicuousness"],
      "aabiiilnnnnostttu" => ["tintinnabulations"],
      "aacdeeilnnnrssttt" => ["transcendentalist"],
      "aacdfiiiilnoqsstu" => ["disqualifications"],
      "aaaefilnoopprrsss" => ["paraprofessionals"],
      "aaccdeegilmoorrrt" => ["electrocardiogram"],
      "aadeeeilmnnprrttt" => ["interdepartmental"],
      "aeeeiimnnoprrsstt" => ["misrepresentation"],
      "aeehiiilnnoprrstt" => ["interrelationship"],
      "aceelmnnoooprstuy" => ["contemporaneously"],
      "aciiimnnnooprsstu" => ["mispronunciations"],
      "acdeeeiinnnorssst" => ["inconsiderateness"],
      "abdeghiiiilnnsstu" => ["indistinguishable"],
      "acdeiiiilnnprrsty" => ["interdisciplinary"],
      "aaceiilnnoorssttv" => ["conversationalist"],
      "aeiiiilllmmnorstu" => ["multimillionaires"],
      "cceeiinnnoosssstu" => ["conscientiousness"],
      "aaaceiiilllmrstty" => ["materialistically"],
      "aeeiilmnnnorssttv" => ["environmentalists"],
      "ccdeiinoprsttuuvy" => ["superconductivity"],
      "aeeimnnorrrsstttu" => ["neurotransmitters"],
      "aadeiilmnnnnnooot" => ["nondenominational"],
      "aaaddegilnosstuvy" => ["disadvantageously"],
      "aacdeeilmnnnrsstt" => ["transcendentalism"],
      "aceeiillnnnoqstuy" => ["inconsequentially"],
      "aaeeeilrrrrsstttx" => ["extraterrestrials"],
      "bceehiiilmnoprsty" => ["comprehensibility"],
      "ceeeehimnnoprsssv" => ["comprehensiveness"],
      "aadfghilorrrsttwy" => ["straightforwardly"],
      "ccdeeinooprrttuuv" => ["counterproductive"],
      "aaceeilnorrsttuvv" => ["ultraconservative"],
      "aaiiimnooppprrsst" => ["misappropriations"],
      "aeeeiiilnnopprstt" => ["plenipotentiaries"],
      "aachhiilllnopprty" => ["philanthropically"],
      "ceeilnnooorrttuuv" => ["counterrevolution"],
      "aciiilnnoosttttuy" => ["constitutionality"]}
    |> Map.get(string_id)
  end

  def valid_ids do
    ["addegiimnnnrssstu", "abceiiiiilmnopstt", "accdiiinnnoorsttt",
     "acceeiilmmnnoottu", "aeeeiinnoprrrsttt", "aeeiiimnnoprrsttt",
     "aaeehiinorsstttuv", "aaccgiiimnnorstuv", "aeefiilmnooprssss",
     "cceiinnnoopssssuu", "aabiiilnnnnostttu", "aacdeeilnnnrssttt",
     "aacdfiiiilnoqsstu", "aaaefilnoopprrsss", "aaccdeegilmoorrrt",
     "aadeeeilmnnprrttt", "aeeeiimnnoprrsstt", "aeehiiilnnoprrstt",
     "aceelmnnoooprstuy", "aciiimnnnooprsstu", "acdeeeiinnnorssst",
     "abdeghiiiilnnsstu", "acdeiiiilnnprrsty", "aaceiilnnoorssttv",
     "aeiiiilllmmnorstu", "cceeiinnnoosssstu", "aaaceiiilllmrstty",
     "aeeiilmnnnorssttv", "ccdeiinoprsttuuvy", "aeeimnnorrrsstttu",
     "aadeiilmnnnnnooot", "aaaddegilnosstuvy", "aacdeeilmnnnrsstt",
     "aceeiillnnnoqstuy", "aaeeeilrrrrsstttx", "bceehiiilmnoprsty",
     "ceeeehimnnoprsssv", "aadfghilorrrsttwy", "ccdeeinooprrttuuv",
     "aaceeilnorrsttuvv", "aaiiimnooppprrsst", "aeeeiiilnnopprstt",
     "aachhiilllnopprty", "ceeilnnooorrttuuv", "aciiilnnoosttttuy"]
    |> Enum.into(HashSet.new)
  end
end
