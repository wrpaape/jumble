defmodule Jumble.ScowlDict.Size95.Length2 do
  def get(string_id) do
    %{"fg" => ["fg"], "lo" => ["ol", "lo"], "oy" => ["oy", "yo"], "sy" => ["ys"],
      "el" => ["le"], "fo" => ["of"], "ii" => ["ii"], "mw" => ["mw", "wm"],
      "hu" => ["uh"], "nz" => ["zn"], "cx" => ["xc"], "pv" => ["vp"],
      "bk" => ["kb"], "il" => ["il"], "gi" => ["ig"], "nr" => ["rn"],
      "ah" => ["ah", "ha"], "er" => ["er", "re"], "rw" => ["wr"], "rx" => ["xr"],
      "cy" => ["cy"], "bi" => ["bi"], "cg" => ["gc"], "gs" => ["gs"],
      "au" => ["au"], "cq" => ["cq"], "ls" => ["ls"], "su" => ["su", "us"],
      "ss" => ["ss"], "lu" => ["lu"], "lr" => ["lr"], "ay" => ["ya"],
      "ps" => ["ps"], "ap" => ["pa"], "tu" => ["tu", "ut"], "iv" => ["iv", "vi"],
      "lp" => ["lp"], "bt" => ["bt"], "oo" => ["oo"], "ev" => ["ev"],
      "hm" => ["mh"], "uz" => ["zu"], "gu" => ["ug"], "ks" => ["ks"],
      "aw" => ["wa"], "lt" => ["tl"], "ad" => ["da", "ad"], "my" => ["ym", "my"],
      "ly" => ["ly"], "al" => ["la"], "vx" => ["xv"], "br" => ["rb"],
      "cs" => ["cs"], "tx" => ["tx", "xt"], "ms" => ["ms"], "nu" => ["un", "nu"],
      "oz" => ["zo"], "bg" => ["bg", "gb"], "es" => ["es"], "jo" => ["jo"],
      "ik" => ["ik", "ki"], "ab" => ["ba"], "lw" => ["lw"], "ip" => ["pi"],
      "ag" => ["ag"], "en" => ["ne", "en"], "ux" => ["xu"], "ou" => ["ou"],
      "iy" => ["yi"], "cv" => ["cv", "vc"], "af" => ["fa"], "uw" => ["wu"],
      "ir" => ["ir"], "mt" => ["tm"], "iu" => ["ui"], "am" => ["ma", "am"],
      "bw" => ["bw"], "lx" => ["xl", "lx"], "rz" => ["zr"], "js" => ["js"],
      "tt" => ["tt"], "uy" => ["yu"], "hw" => ["hw"], "bm" => ["mb"],
      "ew" => ["ew", "we"], "fm" => ["mf"], "co" => ["oc"], "eh" => ["eh", "he"],
      "dp" => ["dp"], "pu" => ["pu", "up"], "ds" => ["ds"], "ct" => ["tc"],
      "wy" => ["wy"], "ci" => ["ci", "ic"], "aj" => ["ja"], "ox" => ["ox"],
      "hy" => ["hy"], "gr" => ["rg"], "hs" => ["hs", "sh"], "rs" => ["rs"],
      "ht" => ["th"], "io" => ["io", "oi"], "no" => ["no", "on"],
      "ow" => ["wo", "ow"], "bp" => ["pb"], "ln" => ["ln"], "ku" => ["ku", "uk"],
      "ns" => ["sn", "ns"], "bc" => ["bc"], "qs" => ["qs"], "hi" => ["hi"],
      "as" => ["as"], "nv" => ["nv"], "ai" => ["ia", "ai"], "mn" => ["mn"],
      "ky" => ["ky"], "mo" => ["om"], "im" => ["mi"], "lm" => ["lm"],
      "mv" => ["mv"], "ny" => ["yn", "ny"], "ey" => ["ey", "ye"],
      "ko" => ["ok", "ko"], "hv" => ["hv"], "ho" => ["ho", "oh"],
      "ix" => ["ix", "xi"], "rv" => ["rv", "vr"], "mu" => ["um", "mu"],
      "do" => ["od", "do"], "pq" => ["qp"], "ru" => ["ru", "ur"], "sz" => ["zs"],
      "at" => ["ta", "at"], "fz" => ["fz"], "mr" => ["mr"], "nw" => ["nw"],
      "kv" => ["kv"], "dm" => ["md"], "ot" => ["ot", "to"], "bb" => ["bb"],
      "mx" => ["mx"], "sx" => ["xs"], "fy" => ["fy"], "eu" => ["eu"],
      "op" => ["po"], "fu" => ["fu"], "os" => ["so"], "go" => ["go"],
      "em" => ["em", "me"], "an" => ["na", "an"], "in" => ["ni", "in"],
      "de" => ["de"], "fi" => ["fi", "if"], "it" => ["ti", "it"],
      "ex" => ["xe", "ex"], "be" => ["be"], "jn" => ["nj"], "iw" => ["iw", "wi"],
      "bh" => ["hb"], "dx" => ["dx"], "az" => ["za"], "fs" => ["fs"],
      "st" => ["ts"], "sw" => ["sw", "ws"], "gn" => ["gn", "ng"], "iq" => ["qi"],
      "ak" => ["ak", "ka"], "ty" => ["yt"], "is" => ["si", "is"], "bv" => ["bv"],
      "ef" => ["ef"], "bn" => ["bn"], "by" => ["yb", "by"], "or" => ["ro", "or"],
      "dy" => ["dy"], "wx" => ["xw"], "tv" => ["tv"], "nt" => ["nt"],
      "hz" => ["hz"], "fw" => ["fw"], "bf" => ["fb"], "du" => ["du"],
      "xx" => ["xx"], "di" => ["id"], "bs" => ["bs"], "hn" => ["hn"],
      "hq" => ["qh"], "ar" => ["ra"]}
    |> Map.get(string_id)
  end

  def valid_ids do
    ["fg", "lo", "oy", "sy", "el", "fo", "ii", "mw", "hu", "nz", "cx", "pv", "bk",
     "il", "gi", "nr", "ah", "er", "rw", "rx", "cy", "bi", "cg", "gs", "au", "cq",
     "ls", "su", "ss", "lu", "lr", "ay", "ps", "ap", "tu", "iv", "lp", "bt", "oo",
     "ev", "hm", "uz", "gu", "ks", "aw", "lt", "ad", "my", "ly", "al", "vx", "br",
     "cs", "tx", "ms", "nu", "oz", "bg", "es", "jo", "ik", "ab", "lw", "ip", "ag",
     "en", "ux", "ou", "iy", "cv", "af", "uw", "ir", "mt", "iu", "am", "bw", "lx",
     "rz", "js", "tt", "uy", "hw", "bm", "ew", "fm", "co", "eh", "dp", "pu", "ds",
     "ct", "wy", "ci", "aj", "ox", "hy", "gr", "hs", "rs", "ht", "io", "no", "ow",
     "bp", "ln", "ku", "ns", "bc", "qs", "hi", "as", "nv", "ai", "mn", "ky", "mo",
     "im", "lm", "mv", "ny", "ey", "ko", "hv", "ho", "ix", "rv", "mu", "do", "pq",
     "ru", "sz", "at", "fz", "mr", "nw", "kv", "dm", "ot", "bb", "mx", "sx", "fy",
     "eu", "op", "fu", "os", "go", "em", "an", "in", "de", "fi", "it", "ex", "be",
     "jn", "iw", "bh", "dx", "az", "fs", "st", "sw", "gn", "iq", "ak", "ty", "is",
     "bv", "ef", "bn", "by", "or", "dy", "wx", "tv", "nt", "hz", "fw", "bf", "du",
     "xx", "di", "bs", "hn", "hq", "ar"]
    |> Enum.into(HashSet.new)
  end
end
