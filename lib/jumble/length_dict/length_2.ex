defmodule Jumble.LengthDict.Length2 do
  def get(string_id) do
    %{"cp" => ["pc"], "eg" => ["ge"], "lo" => ["lo"], "eo" => ["oe"],
      "oy" => ["yo"], "mp" => ["mp", "pm"], "dt" => ["td"], "cr" => ["cr"],
      "ae" => ["ea"], "el" => ["le"], "fo" => ["of"], "cm" => ["cm", "mc"],
      "ii" => ["ii"], "mw" => ["wm"], "hu" => ["uh"], "nz" => ["nz", "zn"],
      "pv" => ["vp"], "bk" => ["bk"], "il" => ["il", "li"], "gi" => ["gi"],
      "ac" => ["ac", "ca"], "nr" => ["rn"], "ah" => ["ah", "ha"],
      "er" => ["er", "re"], "rx" => ["rx"], "bi" => ["bi"], "kp" => ["kp"],
      "ch" => ["ch"], "gs" => ["gs"], "au" => ["au"], "ls" => ["ls"],
      "su" => ["us"], "ss" => ["ss"], "sv" => ["vs"], "jp" => ["jp"],
      "lu" => ["lu"], "lr" => ["lr"], "ay" => ["ay"], "ps" => ["ps"],
      "et" => ["et"], "ap" => ["ap", "pa"], "tu" => ["ut"], "iv" => ["iv", "vi"],
      "cw" => ["wc"], "lp" => ["lp", "pl"], "bt" => ["tb"], "ks" => ["ks"],
      "aw" => ["wa", "aw"], "lt" => ["lt", "tl"], "dg" => ["gd"],
      "ad" => ["da", "ad"], "my" => ["my"], "al" => ["al", "la"], "vx" => ["xv"],
      "jv" => ["jv", "vj"], "br" => ["br", "rb"], "gk" => ["kg"], "dz" => ["dz"],
      "cs" => ["cs", "sc"], "tx" => ["tx"], "ms" => ["ms", "sm"],
      "nu" => ["un", "nu"], "gp" => ["gp", "pg"], "oz" => ["oz"], "bg" => ["gb"],
      "bl" => ["lb"], "es" => ["es", "se"], "jo" => ["jo", "oj"], "jr" => ["jr"],
      "ab" => ["ab", "ba"], "ip" => ["ip", "pi"], "ag" => ["ag", "ga"],
      "en" => ["ne"], "bd" => ["db"], "cn" => ["nc"], "af" => ["af", "fa"],
      "uw" => ["wu"], "cc" => ["cc"], "ir" => ["ir", "ri"], "dj" => ["dj"],
      "mt" => ["mt", "tm"], "am" => ["am", "ma"], "lx" => ["xl"], "rz" => ["zr"],
      "cf" => ["cf"], "bm" => ["bm", "mb"], "ew" => ["we"], "fm" => ["fm"],
      "co" => ["co"], "ce" => ["ec"], "hr" => ["hr", "rh"], "eh" => ["he", "eh"],
      "dp" => ["dp", "pd"], "pu" => ["pu", "up"], "gl" => ["lg"], "ds" => ["sd"],
      "ct" => ["ct", "tc"], "wy" => ["wy"], "dd" => ["dd"], "ci" => ["ci"],
      "ox" => ["ox"], "pr" => ["pr"], "gr" => ["gr"], "hs" => ["hs", "sh"],
      "rs" => ["sr", "rs"], "ht" => ["th", "ht"], "io" => ["io"],
      "no" => ["no", "on"], "ow" => ["ow"], "ei" => ["ie"], "pt" => ["pt"],
      "bp" => ["bp", "pb"], "ln" => ["ln"], "fl" => ["fl"], "uv" => ["uv"],
      "px" => ["px"], "ku" => ["uk"], "ns" => ["sn"], "mm" => ["mm"],
      "bc" => ["bc", "cb"], "qs" => ["sq"], "rr" => ["rr"], "ck" => ["kc"],
      "dn" => ["nd"], "hi" => ["hi"], "as" => ["as"], "cd" => ["cd", "dc"],
      "nv" => ["nv"], "ai" => ["ai", "ia"], "mn" => ["mn", "nm"], "ky" => ["ky"],
      "mo" => ["mo"], "im" => ["mi"], "lm" => ["ml"], "kw" => ["kw", "wk"],
      "ny" => ["ny"], "ey" => ["ye"], "cu" => ["cu"], "ko" => ["ko", "ok"],
      "ho" => ["ho", "oh"], "ix" => ["ix", "xi"], "rv" => ["rv"],
      "mu" => ["mu", "um"], "np" => ["np"], "fh" => ["hf"], "km" => ["km"],
      "do" => ["od", "do"], "bo" => ["bo", "ob"], "gm" => ["gm", "mg"],
      "ft" => ["ft"], "ru" => ["ru", "ur"], "qt" => ["qt"], "at" => ["at", "ta"],
      "mr" => ["mr", "rm"], "nw" => ["nw"], "dm" => ["md"], "ot" => ["ot", "to"],
      "bb" => ["bb"], "sx" => ["xs"], "eu" => ["eu"], "op" => ["po", "op"],
      "os" => ["os", "so"], "go" => ["go"], "em" => ["me", "em"],
      "av" => ["av", "va"], "vw" => ["wv"], "an" => ["na", "an"],
      "in" => ["in", "ni"], "de" => ["de", "ed"], "fi" => ["if"], "ry" => ["yr"],
      "it" => ["it", "ti"], "aq" => ["qa"], "ex" => ["xe", "ex"], "be" => ["be"],
      "aa" => ["aa"], "jn" => ["nj"], "ax" => ["ax"], "iw" => ["wi"],
      "pp" => ["pp"], "az" => ["az"], "fs" => ["sf"], "st" => ["st", "ts"],
      "sw" => ["sw"], "iq" => ["iq"], "ak" => ["ak"], "hp" => ["hp", "ph"],
      "dr" => ["dr", "rd"], "gh" => ["hg"], "ep" => ["pe"], "ty" => ["ty"],
      "is" => ["si", "is"], "ef" => ["fe"], "bn" => ["nb"], "by" => ["yb", "by"],
      "or" => ["or"], "dy" => ["yd"], "tv" => ["tv", "vt"], "cl" => ["cl"],
      "dv" => ["vd"], "nt" => ["nt", "tn"], "hz" => ["hz"], "tw" => ["wt"],
      "kr" => ["kr"], "xx" => ["xx"], "di" => ["di", "id"], "fr" => ["fr"],
      "bs" => ["bs", "sb"], "hn" => ["nh"], "hq" => ["hq"], "ar" => ["ar", "ra"]}
    |> Map.get(string_id)
  end
end
