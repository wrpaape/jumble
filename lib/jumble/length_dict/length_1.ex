defmodule Jumble.LengthDict.Length1 do
  @length_1_length_dict  %{"P" => ["P"], "i" => ["i"], "g" => ["g"], "a" => ["a"], "s" => ["s"],
                           "E" => ["E"], "n" => ["n"], "m" => ["m"], "Z" => ["Z"], "K" => ["K"],
                           "A" => ["A"], "H" => ["H"], "q" => ["q"], "r" => ["r"], "M" => ["M"],
                           "d" => ["d"], "F" => ["F"], "Q" => ["Q"], "j" => ["j"], "p" => ["p"],
                           "R" => ["R"], "U" => ["U"], "S" => ["S"], "N" => ["N"], "x" => ["x"],
                           "v" => ["v"], "I" => ["I"], "o" => ["o"], "D" => ["D"], "t" => ["t"],
                           "z" => ["z"], "l" => ["l"], "b" => ["b"], "k" => ["k"], "e" => ["e"],
                           "f" => ["f"], "y" => ["y"], "B" => ["B"], "h" => ["h"], "V" => ["V"],
                           "Y" => ["Y"], "u" => ["u"], "J" => ["J"], "T" => ["T"], "L" => ["L"],
                           "X" => ["X"], "O" => ["O"], "C" => ["C"], "c" => ["c"], "w" => ["w"],
                           "W" => ["W"], "G" => ["G"]}
  
  def get(string_id) do
    @length_1_length_dict 
    |> Map.get(string_id)
  end
end
